{"version":3,"sources":["Store.js","styles.js","PersonalInfo.js","Languages.js","SkillChart.js","MainInfo.js","ModeSwitch.js","Sidebar.js","ProjectCard.js","Projects.js","TabPanel.js","formatDate.js","Education.js","Experience.js","TabsInfo.js","App.js","Theme.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","styles","makeStyles","root","width","fill","name","fontSize","label","weight","fontWeight","header","paddingTop","pinkColor","color","Profiles","props","profiles","profilesArray","map","profile","index","ListItem","dense","Link","href","url","network","Fragment","PersonalInfo","context","useContext","basics","data","language","classes","List","className","divider","ListItemAvatar","style","paddingRight","Avatar","src","height","ListItemText","primary","secondary","summary","website","email","phone","Languages","languages","item","Typography","padBot","Grid","container","justify","spacing","wrap","Divider","orientation","scale","level","gridItem","fluency","borderColor","SkillChart","theme","useTheme","canvasRef","useRef","skillLabels","skills","skill","filter","skillLevels","useEffect","Chart","defaults","global","defaultFontColor","palette","text","defaultFontFamily","current","type","options","responsive","angleLines","display","ticks","suggestedMin","suggestedMax","legend","position","fontColor","contrastText","title","maintainAspectRatio","aspectRatio","tooltips","callbacks","tooltipItem","labels","datasets","backgroundColor","main","ref","MainInfo","Paper","padding","xs","md","align","variantMapping","h3","Tooltip","Box","margin","useStyles","switchBase","grey","checked","track","ModeSwitch","FormGroup","row","FormControlLabel","control","Switch","darkMode","onChange","event","setDarkMode","target","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","ProjectCard","Card","elevation","CardMedia","component","alt","image","imgUrl","CardContent","gutterBottom","variant","description","flexwrap","keywords","keyword","Chip","CardActions","Button","size","demoUrl","disabled","codeUrl","breakpoints","down","paddingBottom","up","Projects","projects","project","lg","img","demo","code","TabPanel","children","value","other","role","hidden","id","formatDate","date","Date","toLocaleDateString","year","month","flexDirection","Education","education","school","ExpansionPanel","ExpansionPanelSummary","content","expandIcon","aria-controls","startDate","endDate","area","studyType","ExpansionPanelDetails","institution","desc","courses","point","ListItemIcon","expanded","marginBottom","Experience","work","job","company","highlights","TabsInfo","useState","setValue","colors","Container","maxWidth","square","Tabs","newValue","setPrimaryColor","indicatorColor","textColor","centered","Tab","icon","axis","direction","onChangeIndex","dir","App","error","setError","isLoaded","setIsLoaded","setData","setLanguage","primaryColor","prefersDarkMode","useMemo","createMuiTheme","tonalOffset","Theme","useMediaQuery","fetch","then","response","json","result","message","Provider","ThemeProvider","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","flexGrow","fixed","LinearProgress","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"sYAGMA,EAAeC,0BCDfC,EAASC,aAAW,iBAAO,CAC7BC,KAAM,CACFC,MAAO,QAEXC,KAAM,CACFD,MAAO,QAEXE,KAAM,CACFC,SAAU,UAEdC,MAAO,CACHD,SAAU,UAEdE,OAAQ,CACJC,WAAY,KAEhBC,OAAQ,CACJC,WAAY,SACZL,SAAU,UAEdM,UAAW,CACPC,MAAO,e,OCbTC,EAAW,SAACC,GAChB,IAAMC,EAAWD,EAAME,cAAcC,KAAI,SAACC,EAASC,GAAV,OACvC,cAACC,EAAA,EAAD,CAAsBC,OAAK,EAA3B,SACE,cAACC,EAAA,EAAD,CAAMV,MAAM,UAAUW,KAAML,EAAQM,IAApC,SAA0CN,EAAQO,WADrCN,MAIjB,OACE,cAAC,IAAMO,SAAP,UACGX,KAKDY,EAAe,WACnB,IAAMC,EAAUC,qBAAWhC,GACrBiC,EAASF,EAAQG,KAAKH,EAAQI,UAAUF,OACxCG,EAAUlC,IAEhB,OACE,eAACmC,EAAA,EAAD,CAAMC,UAAWF,EAAQhC,KAAzB,UACE,eAACmB,EAAA,EAAD,CAAUgB,SAAO,EAAjB,UACE,cAACC,EAAA,EAAD,CAAgBC,MAAO,CAAEC,aAAc,QAAvC,SACE,cAACC,EAAA,EAAD,CAAQC,IAAG,GAAMH,MAAO,CAAEI,OAAQ,OAAQxC,MAAO,YAGnD,cAACyC,EAAA,EAAD,CAAcV,QAAS,CACrBW,QAASX,EAAQ7B,KACjByC,UAAWZ,EAAQ3B,OAClBsC,QAASd,EAAO1B,KAAMyC,UAAWf,EAAOxB,WAE7C,cAACc,EAAA,EAAD,CAAUC,OAAK,EAAf,SACE,cAACsB,EAAA,EAAD,CAAcC,QAAQ,WAAWC,UAAWf,EAAOgB,YAErD,cAAC1B,EAAA,EAAD,CAAUC,OAAK,EAAf,SACE,cAACC,EAAA,EAAD,CAAMd,WAAW,MAAMe,KAAMO,EAAOiB,QAApC,SAA+CjB,EAAOiB,YAExD,cAAC3B,EAAA,EAAD,CAAUC,OAAK,EAAf,SACE,cAACsB,EAAA,EAAD,CAAcC,QAAQ,UAAUC,UAAWf,EAAOkB,UAEpD,cAAC5B,EAAA,EAAD,CAAUC,OAAK,EAAf,SACE,cAACsB,EAAA,EAAD,CAAcC,QAAQ,QAAQC,UAAWf,EAAOmB,UAElD,cAAC,EAAD,CAAUjC,cAAec,EAAOf,e,SC7ChCmC,EAAY,WACd,IAAMjB,EAAUlC,IACV6B,EAAUC,qBAAWhC,GAErBsD,EAAYvB,EAAQG,KAAKH,EAAQI,UAAUmB,UAAUlC,KAAI,SAACmC,EAAMjC,GAAP,OAC3D,eAACe,EAAA,EAAD,WAEI,cAACd,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,UACKD,EAAKpB,aAGd,cAACZ,EAAA,EAAD,CAAUe,UAAWF,EAAQqB,OAA7B,SACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAQ,gBACRC,QAAS,EACTC,KAAK,SAJT,UAMI,cAACJ,EAAA,EAAD,UACI,cAACK,EAAA,EAAD,CAASC,YAAY,eAExBT,EAAKU,MAAM7C,KAAI,SAAC8C,EAAO5C,GACpB,IAAI6C,EAcJ,OAZIA,EADA7C,GAASiC,EAAKa,QAEV,cAACV,EAAA,EAAD,CAAMH,MAAI,EAACjB,UAAWF,EAAQiC,YAA9B,SACI,cAACb,EAAA,EAAD,CAAYzC,MAAM,UAAlB,SAA6BmD,MAKjC,cAACR,EAAA,EAAD,CAAMH,MAAI,EAACjB,UAAWF,EAAQiC,YAA9B,SACI,cAACb,EAAA,EAAD,CAAYlB,UAAWF,EAAQ1B,OAA/B,SAAwCwD,MAKhD,eAAC,IAAMrC,SAAP,WACKsC,EACD,cAACT,EAAA,EAAD,UACI,cAACK,EAAA,EAAD,CAASC,YAAY,iBAHR1C,aAjC9BA,MA+Cf,OACI,cAAC,IAAMO,SAAP,UACI,cAACQ,EAAA,EAAD,CAAMC,UAAWF,EAAQhC,KAAzB,SACKkD,O,yBCzDXgB,EAAa,WACjB,IAAMC,EAAQC,cACRC,EAAYC,mBACZ3C,EAAUC,qBAAWhC,GAErB2E,EAAc5C,EAAQG,KAAKH,EAAQI,UAAUyC,OAChDxD,KAAI,SAAAyD,GAAK,OAAIA,EAAMtE,QACnBuE,QAAO,SAAAD,GAAK,MAAc,WAAVA,KACbE,EAAchD,EAAQG,KAAKH,EAAQI,UAAUyC,OAChDxD,KAAI,SAAAyD,GAAK,OAAIA,EAAMX,SACnBY,QAAO,SAAAD,GAAK,QAAMA,KAyDrB,OArDAG,qBAAU,WACRC,IAAMC,SAASC,OAAOC,iBAAmBb,EAAMc,QAAQC,KAAKvC,QAC5DkC,IAAMC,SAASC,OAAOI,kBAAoB,SAE1C,IAAIN,IAAMR,EAAUe,QAAS,CAC3BC,KAAM,QACNC,QAAS,CACPC,YAAY,EACZ1B,MAAO,CACL2B,WAAY,CACVC,SAAS,GAEXC,MAAO,CACLC,aAAc,EACdC,aAAc,KAGlBC,OAAQ,CACNC,SAAU,SACVC,UAAW5B,EAAMc,QAAQtC,QAAQqD,cAGnCC,MAAO,CAELF,UAAW5B,EAAMc,QAAQtC,QAAQqD,cAEnCE,qBAAqB,EACrBC,YAAa,EACbC,SAAU,CACRC,UAAW,CACTJ,MAAO,SAAUK,EAAaxE,GAC5B,OAAOA,EAAI,OAAWwE,EAAY,GAAZ,QAExBjG,MAAO,SAAUiG,EAAaxE,GAC5B,OAAOA,EAAI,SAAa,GAAjB,KAA4BwE,EAAW,OAAa,WAKnExE,KAAM,CACJyE,OAAQhC,EACRiC,SAAU,CAAC,CACTnG,MAAO,uBACPyB,KAAM6C,EACN8B,gBAAiBtC,EAAMc,QAAQtC,QAAQ+D,KACvCzC,YAAaE,EAAMc,QAAQtC,QAAQ+D,KACnCxG,MAAM,MAIT,CAACiE,OAGC,wBAAQ9B,MAAO,CAAEpC,MAAO,QAAU0G,IAAKtC,K,kBC9D1CuC,EAAW,WACf,IAAM5E,EAAUlC,IAChB,OACE,cAAC+G,EAAA,EAAD,CAAOxE,MAAO,CAAEyE,QAAS,UAAzB,SACE,eAACxD,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMH,MAAI,EAAC4D,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,SACE,cAAC,EAAD,MAEF,eAAC3D,EAAA,EAAD,CAAMH,MAAI,EAAC4D,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,UACE,cAAC7D,EAAA,EAAD,CAAYlB,UAAWF,EAAQxB,OAAQ0G,eAAgB,CAAEC,GAAI,MAA7D,uBAIA,cAAC,EAAD,OAEF,eAAC7D,EAAA,EAAD,CAAMH,MAAI,EAAC4D,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,UACE,cAAC7D,EAAA,EAAD,CAAYlB,UAAWF,EAAQxB,OAAQ0G,eAAgB,CAAEC,GAAI,MAA7D,oBAGA,cAACC,EAAA,EAAD,CAASnB,MAAM,wRAAf,SACE,cAACoB,EAAA,EAAD,CAAKhF,MAAO,CAAEiF,OAAQ,QAAtB,SACE,cAAC,EAAD,iB,mCCvBRC,EAAYxH,YAAW,CAC3ByH,WAAY,CACV,YAAa,CACX7G,MAAO8G,IAAK,MAEd,qBAAsB,CACpBhB,gBAAiBgB,IAAK,OAG1BC,QAAS,GACTC,MAAO,KAGHC,EAAa,WACjB,IAAMjG,EAAUC,qBAAWhC,GACrBoC,EAAUuF,IAMhB,OACE,cAACM,EAAA,EAAD,CAAWC,KAAG,EAAd,SACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEjG,QAAS,CACPwF,WAAYxF,EAAQwF,WACpBE,QAAS1F,EAAQ0F,QACjBC,MAAO3F,EAAQ2F,OAEjBD,QAAS/F,EAAQuG,SACjBC,SAfW,SAACC,GACpBzG,EAAQ0G,YAAYD,EAAME,OAAOZ,UAezBvH,KAAK,SAGTE,MAAM,iB,mCC9BIN,aAAW,SAACoE,GAAD,MAAY,CACvCnE,KAAM,CACJyF,QAAS,QAEX8C,KAAM,CACJ9C,QAAS,QAEX+C,OAAQ,CAENC,WAAY,GAEdC,YAAa,CAEXjG,OAAQ,QAEVkG,aAAa,yBACXlD,QAAS,OACTmD,WAAY,SACZ9B,QAAS3C,EAAMV,QAAQ,EAAG,IAEvBU,EAAM0E,OAAOC,SALN,IAMVC,eAAgB,iB,mICvBdC,GAAc,SAACnI,GACnB,OACE,eAACoI,GAAA,EAAD,CAAM/G,UAAW,OAAQgH,UAAW,EAApC,UACE,cAACC,GAAA,EAAD,CACEC,UAAU,MACVC,IAAI,wBACJ5G,OAAO,MACP6G,MAAO,WAAazI,EAAM0I,OAC1BtD,MAAOpF,EAAMoF,QAEf,eAACuD,GAAA,EAAD,WACE,cAACpG,EAAA,EAAD,CAAYqG,cAAY,EAACC,QAAQ,KAAKN,UAAU,KAAhD,SACGvI,EAAMoF,QAET,cAAC7C,EAAA,EAAD,CAAYsG,QAAQ,QAAQ/I,MAAM,gBAAgByI,UAAU,IAA5D,SACGvI,EAAM8I,cAET,cAACrG,EAAA,EAAD,CACEjB,MAAO,CAAEiF,OAAQ,UACjB/D,WAAS,EACTC,QAAQ,eACRoG,SAAS,OAJX,SAMG/I,EAAMgJ,SAAS7I,KAAI,SAAC8I,EAAS5I,GAC5B,OACE,cAACoC,EAAA,EAAD,CAAMjB,MAAO,CAAEiF,OAAQ,UAAwBnE,MAAI,EAAnD,SACE,cAAC4G,GAAA,EAAD,CAAM1J,MAAOyJ,KADyB5I,WAOhD,eAAC8I,GAAA,EAAD,CAAa3H,MAAO,CAAE0G,eAAgB,YAAtC,UACE,cAACkB,GAAA,EAAD,CACEC,KAAK,QACLvJ,MAAM,UACNW,KAAMT,EAAMsJ,QACZ7B,OAAO,SACP8B,SAA4B,KAAlBvJ,EAAMsJ,QALlB,kBASA,cAACF,GAAA,EAAD,CACEC,KAAK,QACLvJ,MAAM,UACNW,KAAMT,EAAMwJ,QACZ/B,OAAO,SAJT,yBChDFf,GAAYxH,aAAW,SAACoE,GAAD,YAAY,CACvCnE,MAAI,GACF8G,QAAS3C,EAAMV,QAAQ,IADrB,cAEDU,EAAMmG,YAAYC,KAAK,MAAQ,CAC9BzD,QAAS3C,EAAMV,QAAQ,GACvB+G,cAAerG,EAAMV,QAAQ,KAJ7B,cAODU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KARvB,cAUDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAXvB,OAgBAiH,GAAW,SAAC7J,GAChB,IAAMc,EAAUC,qBAAWhC,GACrBoC,EAAUuF,KAChB,OACE,8BACE,cAACjE,EAAA,EAAD,CAAMC,WAAS,EAAf,SACG5B,EAAQG,KAAKH,EAAQI,UAAU4I,SAAS3J,KAAI,SAAC4J,EAAS1J,GACrD,OACE,cAACoC,EAAA,EAAD,CACEH,MAAI,EACJ4D,GAAI,GACJC,GAAI,EACJ6D,GAAI,EACJ5D,MAAM,SACN/E,UAAWF,EAAQhC,KANrB,SASE,cAAC,GAAD,CACEiG,MAAO2E,EAAQ3E,MACf0D,YAAaiB,EAAQ/H,QACrB0G,OAAQqB,EAAQE,IAChBX,QAASS,EAAQG,KACjBV,QAASO,EAAQI,KACjBnB,SAAUe,EAAQf,YARf3I,W,SClCbqG,GAAYxH,aAAW,SAACoE,GAAD,YAAY,CACvCnE,MAAI,GACF8G,QAAS3C,EAAMV,QAAQ,IADrB,cAEDU,EAAMmG,YAAYC,KAAK,MAAQ,CAC9BzD,QAAS3C,EAAMV,QAAQ,KAHvB,cAMDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAPvB,cASDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAVvB,OAeAwH,GAAW,SAACpK,GAAW,IACnBqK,EAAqCrK,EAArCqK,SAAUC,EAA2BtK,EAA3BsK,MAAOjK,EAAoBL,EAApBK,MAAUkK,EADT,aACmBvK,EADnB,8BAEpBmB,EAAUuF,KAQhB,OACE,6CACE8D,KAAK,WACLC,OAAQH,IAAUjK,EAClBqK,GAAE,8BAAyBrK,IACvBkK,GAJN,aAMGD,IAAUjK,GAAS,cAACmG,EAAA,EAAD,CAAKnF,UAAWF,EAAQhC,KAAxB,SAA+BkL,Q,oGCrCnDM,GAAa,SAACC,GAClB,GAAa,QAATA,EACF,MAAO,MAMT,OAHgB,IAAIC,KAAKD,GACFE,mBAAmB,QAF1B,CAAEC,KAAM,UAAWC,MAAO,UCctCtE,GAAYxH,aAAW,SAACoE,GAAD,YAAY,CACvCtB,QAAS,CACPiJ,cAAe,SACflD,WAAY,cAGd5I,MAAI,GACF8G,QAAS3C,EAAMV,QAAQ,IADrB,cAEDU,EAAMmG,YAAYC,KAAK,MAAQ,CAC9BzD,QAAS3C,EAAMV,QAAQ,GACvB+G,cAAerG,EAAMV,QAAQ,KAJ7B,cAODU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KARvB,cAUDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAXvB,OAgBAsI,GAAY,SAAClL,GAC4BA,EAArCqK,SADoB,IACVC,EAA2BtK,EAA3BsK,MAAOjK,EAAoBL,EAApBK,MAAUkK,EADR,aACkBvK,EADlB,8BAErBmB,EAAUuF,KACV5F,EAAUC,qBAAWhC,GAC3B,OACE,6CAEEyL,KAAK,WACLC,OAAQH,IAAUjK,EAClBqK,GAAE,8BAAyBrK,IACvBkK,GALN,aAOE,cAAC9H,EAAA,EAAD,CAAMC,WAAS,EAAf,SACG4H,IAAUjK,GACTS,EAAQG,KAAKH,EAAQI,UAAUiK,UAAUhL,KAAI,SAACiL,EAAQ/K,GACpD,OACE,cAACoC,EAAA,EAAD,CACEH,MAAI,EACJ4D,GAAI,GACJE,MAAM,SACN/E,UAAWF,EAAQhC,KAJrB,SAOE,eAACkM,GAAA,EAAD,CAAgBxC,QAAQ,WAAxB,UACE,eAACyC,GAAA,EAAD,CACEnK,QAAS,CAAEoK,QAASpK,EAAQa,SAC5BwJ,WAAY,cAAC,KAAD,IACZC,gBAAc,kBACdf,GAAG,iBAJL,UAME,cAACnI,EAAA,EAAD,CAAYlB,UAAW,GAAIwH,QAAS,WAApC,SACG8B,GAAWS,EAAOM,WACjB,MACAf,GAAWS,EAAOO,WAEtB,cAACpJ,EAAA,EAAD,CAAYlB,UAAW,GAAIwH,QAAS,KAApC,SACGuC,EAAOQ,OAEV,cAACrJ,EAAA,EAAD,CAAYlB,UAAW,GAAIwH,QAAS,YAApC,SACGuC,EAAOS,eAGZ,eAACC,GAAA,EAAD,CAAuBzK,UAAWF,EAAQa,QAA1C,UACE,cAACO,EAAA,EAAD,CAAYsG,QAAQ,WAApB,SACGuC,EAAOW,cAEV,cAACxJ,EAAA,EAAD,CAAYsG,QAAQ,QAAQzC,MAAM,UAAlC,SACGgF,EAAOY,OAEV,cAAC5K,EAAA,EAAD,UACGgK,EAAOa,QAAQ9L,KAAI,SAAC+L,EAAO7L,GAC1B,OACE,eAACC,EAAA,EAAD,WACG4L,GACC,cAACC,GAAA,EAAD,UACE,cAAC,KAAD,MAGJ,cAACtK,EAAA,EAAD,UAAeqK,MANF7L,eA/BpBA,YC3CfqG,GAAYxH,aAAW,SAACoE,GAAD,YAAY,CACvCtB,QAAS,CACPiJ,cAAe,SACflD,WAAY,cAEdqE,SAAU,CACRC,aAAc,GAGhBlN,MAAI,GACF8G,QAAS3C,EAAMV,QAAQ,IADrB,cAEDU,EAAMmG,YAAYC,KAAK,MAAQ,CAC9BzD,QAAS3C,EAAMV,QAAQ,GACvB+G,cAAerG,EAAMV,QAAQ,KAJ7B,cAODU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KARvB,cAUDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAXvB,OAgBA0J,GAAa,SAACtM,GAC2BA,EAArCqK,SADqB,IACXC,EAA2BtK,EAA3BsK,MAAOjK,EAAoBL,EAApBK,MAAUkK,EADP,aACiBvK,EADjB,8BAEtBmB,EAAUuF,KACV5F,EAAUC,qBAAWhC,GAC3B,OACE,6CACEyL,KAAK,WACLC,OAAQH,IAAUjK,EAClBqK,GAAE,8BAAyBrK,IACvBkK,GAJN,aAME,cAAC9H,EAAA,EAAD,CAAMC,WAAS,EAAf,SACG4H,IAAUjK,GACTS,EAAQG,KAAKH,EAAQI,UAAUqL,KAAKpM,KAAI,SAACqM,EAAKnM,GAC5C,OACE,cAACoC,EAAA,EAAD,CACEH,MAAI,EACJ4D,GAAI,GACJE,MAAM,SACN/E,UAAWF,EAAQhC,KAJrB,SAOE,eAACkM,GAAA,EAAD,CAAgBhD,UAAW,EAA3B,UACE,eAACiD,GAAA,EAAD,CACEnK,QAAS,CAAEoK,QAASpK,EAAQa,SAC5BwJ,WAAY,cAAC,KAAD,IACZC,gBAAc,kBACdf,GAAG,iBAJL,UAME,cAACnI,EAAA,EAAD,CAAYlB,UAAW,GAAIwH,QAAS,WAApC,SACG8B,GAAW6B,EAAId,WACd,MACAf,GAAW6B,EAAIb,WAEnB,cAACpJ,EAAA,EAAD,CAAYlB,UAAW,GAAIwH,QAAS,KAApC,SACG2D,EAAIvH,WAEP,cAAC1C,EAAA,EAAD,CAAYlB,UAAW,GAAIwH,QAAS,YAApC,SACG2D,EAAIC,aAGT,eAACX,GAAA,EAAD,CAAuBzK,UAAWF,EAAQa,QAA1C,UACE,cAACO,EAAA,EAAD,CAAYsG,QAAQ,QAAQzC,MAAM,UAAlC,SACGoG,EAAIxK,UAEP,cAACZ,EAAA,EAAD,UACGoL,EAAIE,WAAWvM,KAAI,SAAC+L,EAAO7L,GAC1B,OACE,eAACC,EAAA,EAAD,WACG4L,GACC,cAACC,GAAA,EAAD,UACE,cAAC,KAAD,MAGJ,cAACtK,EAAA,EAAD,UAAeqK,MANF7L,eA5BpBA,YC3CfsM,GAAW,WACf,IAAM7L,EAAUC,qBAAWhC,GACrBoC,EAAUlC,IACVqE,EAAQC,cAHO,EAIKqJ,mBAAS,GAJd,mBAIdtC,EAJc,KAIPuC,EAJO,KAKfC,EAAS,CAAC,UAAW,UAAW,UAAW,WAajD,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAAKxL,MAAO,CAAEyE,QAAS,GAA3C,SAEE,eAACD,EAAA,EAAD,CAAOiH,QAAM,EAAC5L,UAAWF,EAAQhC,KAAjC,UACE,eAAC+N,EAAA,EAAD,CAEE5C,MAAOA,EACPhD,SAlBa,SAACC,EAAO4F,GAC3BN,EAASM,GACTrM,EAAQsM,gBAAgBN,EAAOK,KAiBzBE,eAAe,UACfC,UAAU,UACVC,UAAQ,EANV,UASE,cAACC,EAAA,EAAD,CAAKC,KAAM,cAAC,IAAD,IAAcjO,MAAM,aAC/B,cAACgO,EAAA,EAAD,CAAKC,KAAM,cAAC,KAAD,IAAgBjO,MAAM,cACjC,cAACgO,EAAA,EAAD,CAAKC,KAAM,cAAC,IAAD,IAAcjO,MAAM,kBAIjC,eAAC,KAAD,CACEkO,KAA0B,QAApBpK,EAAMqK,UAAsB,YAAc,IAChDtN,MAAOiK,EACPsD,cA5BkB,SAACvN,GACzBwM,EAASxM,GACTS,EAAQsM,gBAAgBN,EAAOzM,KAuB3B,UAME,cAAC,GAAD,CAAUiK,MAAOA,EAAOjK,MAAO,EAAGwN,IAAKvK,EAAMqK,UAA7C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAUrD,MAAOA,EAAOjK,MAAO,EAAGwN,IAAKvK,EAAMqK,UAA7C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAUrD,MAAOA,EAAOjK,MAAO,EAAGwN,IAAKvK,EAAMqK,UAA7C,SACE,cAAC,GAAD,e,SCnDNjH,GAAYxH,aAAW,SAACoE,GAAD,YAAY,CACvCnE,MAAI,GACF8G,QAAS3C,EAAMV,QAAQ,IADrB,cAEDU,EAAMmG,YAAYC,KAAK,MAAQ,CAC9BzD,QAAS3C,EAAMV,QAAQ,KAHvB,cAMDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAPvB,cASDU,EAAMmG,YAAYG,GAAG,MAAQ,CAC5B3D,QAAS3C,EAAMV,QAAQ,KAVvB,OAyGSkL,OA1Ff,WAAgB,IAAD,EACalB,mBAAS,MADtB,mBACNmB,EADM,KACCC,EADD,OAEmBpB,oBAAS,GAF5B,mBAENqB,EAFM,KAEIC,EAFJ,OAGWtB,mBAAS,IAHpB,mBAGN3L,EAHM,KAGAkN,EAHA,OAImBvB,mBAAS,MAJ5B,mBAIN1L,EAJM,KAIIkN,EAJJ,OAKmBxB,oBAAS,GAL5B,mBAKNvF,EALM,KAKIG,EALJ,OAM2BoF,mBAAS,WANpC,mBAMNyB,EANM,KAMQjB,EANR,KAOPjM,EAAUuF,KAGVpD,EC1CM,SAACgL,EAAiBxM,GAAlB,OAA8ByM,mBACxC,kBACIC,aAAe,CACXpK,QAAS,CACLI,KAAM8J,EAAkB,OAAS,QACjCxM,QAAS,CACL+D,KAAM/D,GAEVC,UAAW,CACP8D,KAAM,WAEV4I,YAAa,QAMjB,CAACH,EAAiBxM,IDyBd4M,CAAMrH,EAAUgH,GACxBC,EAAkBK,YAAc,gCAoBtC,OAlBA5K,qBAAU,WACRyD,EAAY8G,GAEZM,MAAM,mBAEHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MACC,SAACG,GACCb,EAAQa,GACRd,GAAY,MAEd,SAACH,GACCC,EAASD,GACTG,GAAY,QAGjB,CAACI,IAEAP,EACK,0CAAaA,EAAMkB,WAChBhB,EAWR,cAAC,IAAMrN,SAAP,UACE,cAAC7B,EAAamQ,SAAd,CACE5E,MAAO,CACLrJ,OACAC,WACAmG,WACAG,cACA4G,cACAhB,mBAPJ,SAUE,eAAC+B,EAAA,EAAD,CAAe7L,MAAOA,EAAtB,UACE,cAAC8L,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQpK,SAAS,SAAjB,SACE,eAACqK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQ1P,MAAM,UAAU2P,aAAW,SAGpD,cAAClN,EAAA,EAAD,CAAYsG,QAAQ,KAAKrH,MAAO,CAAEkO,SAAU,GAA5C,oBAGA,cAAC,EAAD,SAIJ,cAAC3C,EAAA,EAAD,CACE1L,UAAWF,EAAQhC,KAEnBwQ,OAAK,EAHP,SAKE,eAAClN,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMH,MAAI,EAACd,MAAO,CAAEpC,MAAO,OAAQuK,cAAe,QAAlD,SACE,cAAC,EAAD,MAEF,cAAClH,EAAA,EAAD,CAAMH,MAAI,EAACd,MAAO,CAAEpC,MAAO,QAA3B,SACE,cAAC,GAAD,kBA5CZ,cAAC,IAAMwB,SAAP,UACE,eAACuO,EAAA,EAAD,CAAe7L,MAAOA,EAAtB,UACE,cAAC8L,EAAA,EAAD,IACA,cAACQ,EAAA,EAAD,CAAgB9P,MAAM,kBE7DZ+P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5B,MAAK,SAAA6B,GACJA,EAAaC,gBAEdC,OAAM,SAAA7C,GACL8C,QAAQ9C,MAAMA,EAAMkB,c","file":"static/js/main.7d5004c6.chunk.js","sourcesContent":["\r\nimport { createContext } from 'react';\r\n\r\nconst StoreContext = createContext();\r\n\r\nexport { StoreContext }\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst styles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    fill: {\r\n        width: '100%',\r\n    },\r\n    name: {\r\n        fontSize: '1.6rem',\r\n    },\r\n    label: {\r\n        fontSize: '1.2rem',\r\n    },\r\n    weight: {\r\n        fontWeight: 100,\r\n    },\r\n    header: {\r\n        paddingTop: '1.5rem',\r\n        fontSize: '1.2rem'\r\n    },\r\n    pinkColor: {\r\n        color: 'hotpink'\r\n    }\r\n\r\n}));\r\n\r\nexport { styles }","import React, { useContext } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\n\r\nconst Profiles = (props) => {\r\n  const profiles = props.profilesArray.map((profile, index) =>\r\n    <ListItem key={index} dense>\r\n      <Link color='primary' href={profile.url}>{profile.network}</Link>\r\n    </ListItem>\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      {profiles}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n  const context = useContext(StoreContext)\r\n  const basics = context.data[context.language].basics\r\n  const classes = styles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem divider>\r\n        <ListItemAvatar style={{ paddingRight: '1rem' }}>\r\n          <Avatar src={``} style={{ height: '6rem', width: '6rem' }}>\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText classes={{\r\n          primary: classes.name,\r\n          secondary: classes.label\r\n        }} primary={basics.name} secondary={basics.label} />\r\n      </ListItem>\r\n      <ListItem dense >\r\n        <ListItemText primary=\"About me\" secondary={basics.summary} />\r\n      </ListItem>\r\n      <ListItem dense >\r\n        <Link fontWeight=\"300\" href={basics.website} >{basics.website}</Link>\r\n      </ListItem>\r\n      <ListItem dense >\r\n        <ListItemText primary=\"E-mail:\" secondary={basics.email} />\r\n      </ListItem>\r\n      <ListItem dense >\r\n        <ListItemText primary=\"Phone\" secondary={basics.phone} />\r\n      </ListItem>\r\n      <Profiles profilesArray={basics.profiles} />\r\n    </List >\r\n  );\r\n}\r\n\r\nexport { PersonalInfo }","import React, { useContext } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Typography, Grid, Divider } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\n\r\nconst Languages = () => {\r\n    const classes = styles();\r\n    const context = useContext(StoreContext)\r\n\r\n    const languages = context.data[context.language].languages.map((item, index) =>\r\n        <List key={index}>\r\n\r\n            <ListItem >\r\n                <Typography >\r\n                    {item.language}\r\n                </Typography>\r\n            </ListItem>\r\n            <ListItem className={classes.padBot}>\r\n                <Grid\r\n                    container\r\n                    justify='space-between'\r\n                    spacing={1}\r\n                    wrap='nowrap'\r\n                >\r\n                    <Grid>\r\n                        <Divider orientation='vertical'></Divider>\r\n                    </Grid>\r\n                    {item.scale.map((level, index) => {\r\n                        let gridItem\r\n                        if (index <= item.fluency) {\r\n                            gridItem = (\r\n                                <Grid item className={classes.borderColor}>\r\n                                    <Typography color='primary'>{level}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        } else {\r\n                            gridItem = (\r\n                                <Grid item className={classes.borderColor}>\r\n                                    <Typography className={classes.weight}>{level}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                {gridItem}\r\n                                <Grid>\r\n                                    <Divider orientation='vertical'></Divider>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                    )}\r\n                </Grid>\r\n            </ListItem>\r\n        </List >\r\n\r\n    );\r\n    return (\r\n        <React.Fragment>\r\n            <List className={classes.root}>\r\n                {languages}\r\n            </List >\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport { Languages }","import React, { useContext, useRef, useEffect } from 'react'\r\nimport Chart from 'chart.js'\r\nimport { StoreContext } from './Store';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nconst SkillChart = () => {\r\n  const theme = useTheme();\r\n  const canvasRef = useRef();\r\n  const context = useContext(StoreContext)\r\n\r\n  const skillLabels = context.data[context.language].skills\r\n    .map(skill => skill.name)\r\n    .filter(skill => skill !== 'Others')\r\n  const skillLevels = context.data[context.language].skills\r\n    .map(skill => skill.level)\r\n    .filter(skill => !!skill)\r\n\r\n  // console.log(skillLabels)\r\n  // console.log(skillLevels)\r\n  useEffect(() => {\r\n    Chart.defaults.global.defaultFontColor = theme.palette.text.primary;\r\n    Chart.defaults.global.defaultFontFamily = \"Roboto\";\r\n\r\n    new Chart(canvasRef.current, {\r\n      type: 'radar',\r\n      options: {\r\n        responsive: true,\r\n        scale: {\r\n          angleLines: {\r\n            display: false\r\n          },\r\n          ticks: {\r\n            suggestedMin: 0,\r\n            suggestedMax: 70\r\n          },\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          fontColor: theme.palette.primary.contrastText,\r\n\r\n        },\r\n        title: {\r\n\r\n          fontColor: theme.palette.primary.contrastText,\r\n        },\r\n        maintainAspectRatio: true,\r\n        aspectRatio: 1,\r\n        tooltips: {\r\n          callbacks: {\r\n            title: function (tooltipItem, data) {\r\n              return data['labels'][tooltipItem[0]['index']];\r\n            },\r\n            label: function (tooltipItem, data) {\r\n              return data['datasets'][0]['data'][tooltipItem['index']] + '/100';\r\n            },\r\n          },\r\n        },\r\n      },\r\n      data: {\r\n        labels: skillLabels,\r\n        datasets: [{\r\n          label: 'Current skill levels',\r\n          data: skillLevels,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main,\r\n          fill: false\r\n\r\n        }]\r\n      }\r\n    }, [theme])\r\n  });\r\n\r\n  return <canvas style={{ width: '100%' }} ref={canvasRef} />;\r\n}\r\n\r\nexport { SkillChart }","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { PersonalInfo } from './PersonalInfo'\r\nimport { Languages } from './Languages'\r\nimport { SkillChart } from './SkillChart'\r\nimport { Box, Tooltip } from '@material-ui/core'\r\nimport { styles } from './styles'\r\n\r\nconst MainInfo = () => {\r\n  const classes = styles()\r\n  return (\r\n    <Paper style={{ padding: '0.5rem' }}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={4} align=\"center\">\r\n          <PersonalInfo />\r\n        </Grid>\r\n        <Grid item xs={12} md={4} align=\"center\">\r\n          <Typography className={classes.header} variantMapping={{ h3: 'h3' }}>\r\n            Languages\r\n          </Typography>\r\n\r\n          <Languages />\r\n        </Grid>\r\n        <Grid item xs={12} md={4} align=\"center\">\r\n          <Typography className={classes.header} variantMapping={{ h3: 'h3' }}>\r\n            Skills\r\n          </Typography>\r\n          <Tooltip title=\"I am aware that putting some numerical values to skills is not really making much sense. I think about it as 'Subjective assessment of my own skills in relation to each other'. To be honest that has been added cause radar chart looks really cool. That's just my opinion though.\">\r\n            <Box style={{ margin: '1rem' }}>\r\n              <SkillChart />\r\n            </Box>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n// }\r\n\r\nexport { MainInfo }\r\n","import { makeStyles } from '@material-ui/core'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport React, { useContext } from 'react'\r\nimport { StoreContext } from './Store'\r\n\r\nconst useStyles = makeStyles({\r\n  switchBase: {\r\n    '&$checked': {\r\n      color: grey[800],\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: grey[700],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})\r\n\r\nconst ModeSwitch = () => {\r\n  const context = useContext(StoreContext)\r\n  const classes = useStyles()\r\n\r\n  const handleChange = (event) => {\r\n    context.setDarkMode(event.target.checked)\r\n  }\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            classes={{\r\n              switchBase: classes.switchBase,\r\n              checked: classes.checked,\r\n              track: classes.track,\r\n            }}\r\n            checked={context.darkMode}\r\n            onChange={handleChange}\r\n            name=\"dark\"\r\n          />\r\n        }\r\n        label=\"Dark mode\"\r\n      />\r\n    </FormGroup>\r\n  )\r\n}\r\nexport { ModeSwitch }\r\n","import CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport clsx from 'clsx'\r\nimport React from 'react'\r\n\r\n// const drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    // width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    // width: drawerWidth,\r\n    height: 'auto',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n}))\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <div\r\n        style={{\r\n          position: 'fixed',\r\n          top: '1rem',\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.hide)}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <ChevronRightIcon />\r\n            <ChevronRightIcon />\r\n            <ChevronRightIcon />\r\n          </div>\r\n        </IconButton>\r\n      </div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        PaperProps={{ elevation: '10' }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {React.Children.map(props.children, (child) => {\r\n            return <ListItem>{child}</ListItem>\r\n          })}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\nexport { Sidebar }\r\n","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  CardActions,\r\n  Chip,\r\n  Grid,\r\n} from '@material-ui/core'\r\n\r\nconst ProjectCard = (props) => {\r\n  return (\r\n    <Card className={'card'} elevation={4}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"Screenshot of project\"\r\n        height=\"100\"\r\n        image={'/resume/' + props.imgUrl}\r\n        title={props.title}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n        <Grid\r\n          style={{ margin: '0.5rem' }}\r\n          container\r\n          justify=\"space-evenly\"\r\n          flexwrap=\"wrap\"\r\n        >\r\n          {props.keywords.map((keyword, index) => {\r\n            return (\r\n              <Grid style={{ margin: '0.2rem' }} key={index} item>\r\n                <Chip label={keyword} />\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions style={{ justifyContent: 'flex-end' }}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href={props.demoUrl}\r\n          target=\"_blank\"\r\n          disabled={props.demoUrl === ''}\r\n        >\r\n          Demo\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href={props.codeUrl}\r\n          target=\"_blank\"\r\n        >\r\n          Code\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\nexport { ProjectCard }\r\n","import React, { useContext } from 'react'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport { StoreContext } from './Store'\r\nimport { ProjectCard } from './ProjectCard'\r\nimport { pink } from '@material-ui/core/colors'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(0),\r\n      paddingBottom: theme.spacing(3),\r\n      // backgroundColor: pink[100],\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n}))\r\n\r\nconst Projects = (props) => {\r\n  const context = useContext(StoreContext)\r\n  const classes = useStyles()\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        {context.data[context.language].projects.map((project, index) => {\r\n          return (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              lg={4}\r\n              align=\"center\"\r\n              className={classes.root}\r\n              key={index}\r\n            >\r\n              <ProjectCard\r\n                title={project.title}\r\n                description={project.summary}\r\n                imgUrl={project.img}\r\n                demoUrl={project.demo}\r\n                codeUrl={project.code}\r\n                keywords={project.keywords}\r\n              />\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport { Projects }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(2),\r\n      // backgroundColor: pink[100],\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n}))\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props\r\n  const classes = useStyles()\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box className={classes.root}>{children}</Box>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { TabPanel }\r\n","const formatDate = (date) => {\r\n  if (date === 'now') {\r\n    return 'now'\r\n  }\r\n  const options = { year: 'numeric', month: 'long' };\r\n  const dateObj = new Date(date)\r\n  const string = dateObj.toLocaleDateString('en-EN', options)\r\n\r\n  return string\r\n}\r\n\r\nexport { formatDate }","import {\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport React, { useContext } from 'react'\r\nimport { formatDate } from './formatDate'\r\nimport { StoreContext } from './Store'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  summary: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n  },\r\n\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(0),\r\n      paddingBottom: theme.spacing(3),\r\n      // backgroundColor: pink[100],\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n}))\r\n\r\nconst Education = (props) => {\r\n  const { children, value, index, ...other } = props\r\n  const classes = useStyles()\r\n  const context = useContext(StoreContext)\r\n  return (\r\n    <div\r\n      // style={{ padding: 20 }}\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      <Grid container>\r\n        {value === index &&\r\n          context.data[context.language].education.map((school, index) => {\r\n            return (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                align=\"center\"\r\n                className={classes.root}\r\n                key={index}\r\n              >\r\n                <ExpansionPanel variant=\"outlined\">\r\n                  <ExpansionPanelSummary\r\n                    classes={{ content: classes.summary }}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={''} variant={'overline'}>\r\n                      {formatDate(school.startDate) +\r\n                        ' - ' +\r\n                        formatDate(school.endDate)}\r\n                    </Typography>\r\n                    <Typography className={''} variant={'h5'}>\r\n                      {school.area}\r\n                    </Typography>\r\n                    <Typography className={''} variant={'subtitle1'}>\r\n                      {school.studyType}\r\n                    </Typography>\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails className={classes.summary}>\r\n                    <Typography variant=\"overline\">\r\n                      {school.institution}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" align=\"justify\">\r\n                      {school.desc}\r\n                    </Typography>\r\n                    <List>\r\n                      {school.courses.map((point, index) => {\r\n                        return (\r\n                          <ListItem key={index}>\r\n                            {point && (\r\n                              <ListItemIcon>\r\n                                <ArrowRightIcon></ArrowRightIcon>\r\n                              </ListItemIcon>\r\n                            )}\r\n                            <ListItemText>{point}</ListItemText>\r\n                          </ListItem>\r\n                        )\r\n                      })}\r\n                    </List>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Grid>\r\n            )\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport { Education }\r\n","import React, { useContext } from 'react'\r\nimport {\r\n  Grid,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Typography,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@material-ui/core'\r\nimport { StoreContext } from './Store'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { formatDate } from './formatDate'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  summary: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n  },\r\n  expanded: {\r\n    marginBottom: 0,\r\n  },\r\n\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(0),\r\n      paddingBottom: theme.spacing(3),\r\n      // backgroundColor: pink[100],\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n}))\r\n\r\nconst Experience = (props) => {\r\n  const { children, value, index, ...other } = props\r\n  const classes = useStyles()\r\n  const context = useContext(StoreContext)\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      <Grid container>\r\n        {value === index &&\r\n          context.data[context.language].work.map((job, index) => {\r\n            return (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                align=\"center\"\r\n                className={classes.root}\r\n                key={index}\r\n              >\r\n                <ExpansionPanel elevation={5}>\r\n                  <ExpansionPanelSummary\r\n                    classes={{ content: classes.summary }}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={''} variant={'overline'}>\r\n                      {formatDate(job.startDate) +\r\n                        ' - ' +\r\n                        formatDate(job.endDate)}\r\n                    </Typography>\r\n                    <Typography className={''} variant={'h5'}>\r\n                      {job.position}\r\n                    </Typography>\r\n                    <Typography className={''} variant={'subtitle1'}>\r\n                      {job.company}\r\n                    </Typography>\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails className={classes.summary}>\r\n                    <Typography variant=\"body1\" align=\"justify\">\r\n                      {job.summary}\r\n                    </Typography>\r\n                    <List>\r\n                      {job.highlights.map((point, index) => {\r\n                        return (\r\n                          <ListItem key={index}>\r\n                            {point && (\r\n                              <ListItemIcon>\r\n                                <ArrowRightIcon></ArrowRightIcon>\r\n                              </ListItemIcon>\r\n                            )}\r\n                            <ListItemText>{point}</ListItemText>\r\n                          </ListItem>\r\n                        )\r\n                      })}\r\n                    </List>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Grid>\r\n            )\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport { Experience }\r\n","import React, { useState, useContext } from 'react';\r\nimport { Paper, Tabs, Tab, useTheme, Container } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n// import LinkIcon from '@material-ui/icons/Link';\r\n// import GitHubIcon from '@material-ui/icons/GitHub';\r\n// import PaletteIcon from '@material-ui/icons/Palette';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n// import LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\nimport { Projects } from './Projects'\r\nimport { TabPanel } from './TabPanel';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { Education } from './Education';\r\nimport { Experience } from './Experience';\r\n\r\n\r\nconst TabsInfo = () => {\r\n  const context = useContext(StoreContext)\r\n  const classes = styles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const colors = ['#e91e63', '#0097a7', '#2196f3', '#fdd835']\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    context.setPrimaryColor(colors[newValue])\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n    context.setPrimaryColor(colors[index])\r\n\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" style={{ padding: 0 }}>\r\n\r\n      <Paper square className={classes.root}>\r\n        <Tabs\r\n          // className={classes.root}\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n\r\n        >\r\n          <Tab icon={<CodeIcon />} label=\"Projects\" />\r\n          <Tab icon={<SchoolIcon />} label=\"Education\" />\r\n          <Tab icon={<WorkIcon />} label=\"Experience\" />\r\n          {/* <Tab icon={<PaletteIcon />} label=\"Skills\" /> */}\r\n        </Tabs>\r\n\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <Projects />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            <Education />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2} dir={theme.direction}>\r\n            <Experience />\r\n          </TabPanel>\r\n          {/* <TabPanel value={value} index={3} dir={theme.direction}>\r\n\r\n                </TabPanel> */}\r\n        </SwipeableViews>\r\n\r\n      </Paper >\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { TabsInfo }","import { CssBaseline, Grid, useMediaQuery } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Container from '@material-ui/core/Container'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport React, { useEffect, useState } from 'react'\nimport './App.css'\nimport { MainInfo } from './MainInfo'\n// import { styles } from './styles';\nimport { ModeSwitch } from './ModeSwitch'\nimport { Sidebar } from './Sidebar'\nimport { StoreContext } from './Store'\nimport { TabsInfo } from './TabsInfo'\nimport { Theme } from './Theme'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(0),\n      // backgroundColor: pink[100],\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up('lg')]: {\n      padding: theme.spacing(2),\n    },\n  },\n}))\n\nfunction App() {\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [data, setData] = useState({})\n  const [language, setLanguage] = useState('en')\n  const [darkMode, setDarkMode] = useState(false)\n  const [primaryColor, setPrimaryColor] = useState('#e91e63')\n  const classes = useStyles()\n\n  // const classes = styles;\n  const theme = Theme(darkMode, primaryColor)\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  // check prefered user mode\n  useEffect(() => {\n    setDarkMode(prefersDarkMode)\n\n    fetch('/resume/db.json')\n      // fetch(\"http://localhost:3333/data\")\n      .then((response) => response.json())\n      .then(\n        (result) => {\n          setData(result)\n          setIsLoaded(true)\n        },\n        (error) => {\n          setError(error)\n          setIsLoaded(true)\n        },\n      )\n  }, [prefersDarkMode])\n\n  if (error) {\n    return <div>Error: {error.message}</div>\n  } else if (!isLoaded) {\n    return (\n      <React.Fragment>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <LinearProgress color=\"primary\" />\n        </ThemeProvider>\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <StoreContext.Provider\n          value={{\n            data,\n            language,\n            darkMode,\n            setDarkMode,\n            setLanguage,\n            setPrimaryColor,\n          }}\n        >\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppBar position=\"static\">\n              <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                  {/* <MenuIcon /> */}\n                </IconButton>\n                <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n                  Resume\n                </Typography>\n                <ModeSwitch />\n              </Toolbar>\n            </AppBar>\n\n            <Container\n              className={classes.root}\n              // style={{ paddingTop: '2.5rem' }}\n              fixed\n            >\n              <Grid container>\n                <Grid item style={{ width: '100%', paddingBottom: '2rem' }}>\n                  <MainInfo />\n                </Grid>\n                <Grid item style={{ width: '100%' }}>\n                  <TabsInfo />\n                </Grid>\n              </Grid>\n            </Container>\n          </ThemeProvider>\n        </StoreContext.Provider>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n","import { createMuiTheme } from \"@material-ui/core\"\r\nimport { useMemo } from \"react\"\r\n\r\nconst Theme = (prefersDarkMode, primary) => useMemo(\r\n    () =>\r\n        createMuiTheme({\r\n            palette: {\r\n                type: prefersDarkMode ? 'dark' : 'light',\r\n                primary: {\r\n                    main: primary, //'#e91e63'\r\n                },\r\n                secondary: {\r\n                    main: '#2962ff',\r\n                },\r\n                tonalOffset: 0.2,\r\n\r\n\r\n\r\n\r\n            },\r\n        }), [prefersDarkMode, primary],\r\n);\r\n\r\nexport { Theme }\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}